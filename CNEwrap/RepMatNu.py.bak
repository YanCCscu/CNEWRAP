#!/usr/bin/env python3
from Bio import AlignIO
from Bio.Align import AlignInfo
from Bio.Align import substitution_matrices as SubsMat
from Bio.Align import MultipleSeqAlignment
import numpy as np

def upper_align(c_align):
	return MultipleSeqAlignment([rec.upper() for rec in c_align])

def replace_matrix(maffile):
	c_aligns = AlignIO.parse(maffile, "maf")
	observed_frequencies=np.zeros((4,4))
	for c_align in c_aligns:
		c_align=upper_align(c_align)
		print(c_align.substitutions)
		observed_frequencies  = observed_frequencies + c_align.substitutions
	observed_frequencies /= np.sum(observed_frequencies)
	residue_frequencies = np.sum(observed_frequencies, 0)
	sum(residue_frequencies) == 1.0
	expected_frequencies = np.dot(residue_frequencies[:, None], residue_frequencies[None, :])
	my_lom = np.log2(observed_frequencies / expected_frequencies)
	return my_lom

if __name__ == "__main__":
	import sys
	maffile = "splitmaf/simHuman1chr7.maf"
	maffile = sys.argv[1]
	my_lom=replace_matrix(maffile)
	np.set_printoptions(precision=3) 
	print(my_lom)
	with open('dna.dist','w') as DistMX:
		print(my_lom.format("%6.3f"),file=DistMX)
